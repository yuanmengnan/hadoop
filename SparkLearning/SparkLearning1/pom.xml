<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>SparkLearning</artifactId>
        <groupId>org.apache.spark</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>SparkLearning1</artifactId>

    <properties>
        <scala.version>2.10.4</scala.version>
        <scala.binary.version>2.10</scala.binary.version>
        <adam.version>0.18.2</adam.version>
        <spark1.version>1.5.0</spark1.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-actors</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.binary.version}</artifactId>
            <version>3.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.scalanlp</groupId>
            <artifactId>breeze_${scala.binary.version}</artifactId>
            <version>0.11.2</version>
            <exclusions>
                <!-- This is included as a compile-scoped dependency by jtransforms, which is
                     a dependency of breeze. -->
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-math3</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.10</artifactId>
            <version>2.2.5</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.bdgenomics.adam/adam-core_2.10 -->
        <dependency>
            <groupId>org.bdgenomics.adam</groupId>
            <artifactId>adam-core_2.10</artifactId>
            <version>${adam.version}</version>
            <exclusions>
            	<exclusion>
            		<groupId>commons-io</groupId>
            		<artifactId>commons-io</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.bdgenomics.adam/adam-cli_2.10 -->
        <dependency>
            <groupId>org.bdgenomics.adam</groupId>
            <artifactId>adam-cli_2.10</artifactId>
            <version>${adam.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.bdgenomics.adam/adam-apis_2.10 -->
        <dependency>
            <groupId>org.bdgenomics.adam</groupId>
            <artifactId>adam-apis_2.10</artifactId>
            <version>${adam.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.databricks/spark-avro_2.10 -->
        <dependency>
            <groupId>com.databricks</groupId>
            <artifactId>spark-avro_2.10</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.databricks/spark-csv_2.10 -->
        <dependency>
            <groupId>com.databricks</groupId>
            <artifactId>spark-csv_2.10</artifactId>
            <version>1.4.0</version>
        </dependency>

        <!-- http://mvnrepository.com/artifact/org.apache.spark/spark-mllib_2.10 -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.10</artifactId>
            <version>${spark1.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.10</artifactId>
            <version>${spark1.version}</version>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.10</artifactId>
            <version>${spark1.version}</version>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.10</artifactId>
            <version>${spark1.version}</version>
            <type>test-jar</type>
            <exclusions>
            	<exclusion>
            		<groupId>commons-io</groupId>
            		<artifactId>commons-io</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
        <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                    <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.14</version>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-hivecontext-compatibility -->
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-hivecontext-compatibility_2.10</artifactId>
		    <version>2.0.0-preview</version>
		</dependency>
        
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_2.10</artifactId>
            <version>${spark1.version}</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.bdgenomics.utils</groupId>-->
        <!--<artifactId>utils-misc_2.10</artifactId>-->
        <!--<version>0.2.7</version>-->
        <!--<type>test-jar</type>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
    </dependencies>

    <build>
        <outputDirectory>target/scala-${scala.binary.version}/classes</outputDirectory>
        <testOutputDirectory>target/scala-${scala.binary.version}/test-classes</testOutputDirectory>
        <plugins>
            <!--
                 This plugin forces the generation of jar containing sql test classes,
                 so that the tests classes of external modules can use them. The two execution profiles
                 are necessary - first one for 'mvn package', second one for 'mvn test-compile'. Ideally,
                 'mvn compile' should not compile test classes and therefore should not need this.
                 However, a closed due to "Cannot Reproduce" Maven bug (https://issues.apache.org/jira/browse/MNG-3559)
                 causes the compilation to fail if catalyst test-jar is not generated. Hence, the
                 second execution profile for 'mvn test-compile'.
           -->
            <plugin> 
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>

            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <configuration>
                    <argLine>-ea -Xmx4g -Xss4m -XX:ReservedCodeCacheSize=${CodeCacheSize}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-scala-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/gen-java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>